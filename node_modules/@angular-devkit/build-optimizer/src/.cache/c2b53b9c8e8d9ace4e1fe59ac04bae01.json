{"remainingRequest":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ng2-img-cropper\\src\\cropperSettings.js","dependencies":[{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ng2-img-cropper\\src\\cropperSettings.js","mtime":1498555521000},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540452592066},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { CropperDrawSettings } from './cropperDrawSettings';\r\nvar CropperSettings = /*@__PURE__*/ (function () {\r\n    function CropperSettings() {\r\n        this.canvasWidth = 300;\r\n        this.canvasHeight = 300;\r\n        this.dynamicSizing = false;\r\n        this.width = 200;\r\n        this.height = 200;\r\n        this.minWidth = 50;\r\n        this.minHeight = 50;\r\n        this.minWithRelativeToResolution = true;\r\n        this.croppedWidth = 100;\r\n        this.croppedHeight = 100;\r\n        this.cropperDrawSettings = new CropperDrawSettings();\r\n        this.touchRadius = 20;\r\n        this.noFileInput = false;\r\n        this.allowedFilesRegex = /\\.(jpe?g|png|gif)$/i;\r\n        this.cropOnResize = true;\r\n        this.preserveSize = false;\r\n        this.compressRatio = 1.0;\r\n        this._rounded = false;\r\n        this._keepAspect = true;\r\n        // init\r\n    }\r\n    Object.defineProperty(CropperSettings.prototype, \"rounded\", {\r\n        get: function () {\r\n            return this._rounded;\r\n        },\r\n        set: function (val) {\r\n            this._rounded = val;\r\n            if (val) {\r\n                this._keepAspect = true;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CropperSettings.prototype, \"keepAspect\", {\r\n        get: function () {\r\n            return this._keepAspect;\r\n        },\r\n        set: function (val) {\r\n            if (val === false && this._rounded) {\r\n                throw new Error('Cannot set keep aspect to false on rounded cropper. Ellipsis not supported');\r\n            }\r\n            this._keepAspect = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CropperSettings;\r\n}());\r\nexport { CropperSettings };\r\n//# sourceMappingURL=cropperSettings.js.map \r\n",null]}