{"remainingRequest":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ngx-credit-cards\\validators\\CreditCard.validator.js","dependencies":[{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ngx-credit-cards\\validators\\CreditCard.validator.js","mtime":1514367016000},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540452592066},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Payment = require(\"payment\");\r\nvar CreditCardValidator = /*@__PURE__*/ (function () {\r\n    function CreditCardValidator() {\r\n    }\r\n    /**\r\n     * Validates a cc number\r\n     * @param control\r\n     */\r\n    CreditCardValidator.validateCardNumber = function (control) {\r\n        if (control) {\r\n            var isValid = Payment.fns.validateCardNumber(control.value);\r\n            if (!isValid) {\r\n                return {\r\n                    \"error\": \"CREDIT_CARD_INVALID\"\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Validates the expiry date.\r\n     * Breaks exp by \"/\" string and assumes that first array entry is month and second year\r\n     * Also removes any spaces\r\n     * @param control\r\n     */\r\n    CreditCardValidator.validateCardExpiry = function (control) {\r\n        if (control) {\r\n            var controlValue = control.value.split(\"/\");\r\n            var isValid = false;\r\n            if (controlValue.length > 1) {\r\n                var month = controlValue[0].replace(/^\\s+|\\s+$/g, '');\r\n                var year = controlValue[1].replace(/^\\s+|\\s+$/g, '');\r\n                isValid = Payment.fns.validateCardExpiry(month, year);\r\n            }\r\n            if (!isValid) {\r\n                return {\r\n                    \"error\": \"CREDIT_EXPIRY_INVALID\"\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Validates cards CVC\r\n     * Also removes any spaces\r\n     * @param control\r\n     */\r\n    CreditCardValidator.validateCardCvc = function (control) {\r\n        if (control) {\r\n            var isValid = Payment.fns.validateCardCVC(control.value);\r\n            if (!isValid) {\r\n                return {\r\n                    \"error\": \"CREDIT_CARD_INVALID\"\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return CreditCardValidator;\r\n}());\r\nexports.CreditCardValidator = CreditCardValidator;\r\n",null]}