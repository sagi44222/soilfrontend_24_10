{"remainingRequest":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ng-chartist\\dist\\chartist.component.js","dependencies":[{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ng-chartist\\dist\\chartist.component.js","mtime":1496447970000},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540452592066},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar Chartist = require(\"chartist\");\nvar ChartistComponent = /*@__PURE__*/ (function () {\n    function ChartistComponent(element) {\n        this.element = element.nativeElement;\n    }\n    ChartistComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (!this.type || !this.data) {\n            Promise.reject(\"Expected at least type and data.\");\n        }\n        return this.renderChart().then(function (chart) {\n            if (_this.events !== undefined) {\n                _this.bindEvents(chart);\n            }\n            return chart;\n        });\n    };\n    ChartistComponent.prototype.ngOnChanges = function (changes) {\n        this.update(changes);\n    };\n    ChartistComponent.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.detach();\n        }\n    };\n    ChartistComponent.prototype.renderChart = function () {\n        var _this = this;\n        var promises = [\n            this.type,\n            this.element,\n            this.data,\n            this.options,\n            this.responsiveOptions\n        ];\n        return Promise.all(promises).then(function (values) {\n            var type = values[0], args = values.slice(1);\n            if (!(type in Chartist)) {\n                throw new Error(type + \" is not a valid chart type\");\n            }\n            _this.chart = (_a = Chartist)[type].apply(_a, args);\n            return _this.chart;\n            var _a;\n        });\n    };\n    ChartistComponent.prototype.update = function (changes) {\n        if (!this.chart || 'type' in changes) {\n            this.renderChart();\n        }\n        else {\n            if (changes['data']) {\n                this.data = changes['data'].currentValue;\n            }\n            if (changes['options']) {\n                this.options = changes['options'].currentValue;\n            }\n            this.chart.update(this.data, this.options);\n        }\n    };\n    ChartistComponent.prototype.bindEvents = function (chart) {\n        for (var _i = 0, _a = Object.keys(this.events); _i < _a.length; _i++) {\n            var event_1 = _a[_i];\n            chart.on(event_1, this.events[event_1]);\n        }\n    };\n    ChartistComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'x-chartist',\n                    template: '<ng-content></ng-content>'\n                },] },\n    ];\n    ChartistComponent.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'type': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'responsiveOptions': [{ type: core_1.Input },],\n        'events': [{ type: core_1.Input },],\n    };\n    return ChartistComponent;\n}());\nexports.ChartistComponent = ChartistComponent;\nvar ChartistModule = /*@__PURE__*/ (function () { function ChartistModule() {\n} ChartistModule.decorators = [\n    { type: core_1.NgModule, args: [{\n                declarations: [\n                    ChartistComponent\n                ],\n                exports: [\n                    ChartistComponent\n                ]\n            },] },\n]; return ChartistModule; }());\nexports.ChartistModule = ChartistModule;\n// for angular-cli\nexports.default = {\n    directives: [ChartistComponent]\n};\n",null]}