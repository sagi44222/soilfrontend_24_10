{"remainingRequest":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ngx-ui-switch\\ui-switch.es5.js","dependencies":[{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ngx-ui-switch\\ui-switch.es5.js","mtime":1523344579000},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540452592066},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { ChangeDetectorRef, Component, EventEmitter, HostListener, Input, NgModule, Output, forwardRef } from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar UI_SWITCH_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef(function () { return UiSwitchComponent; }),\n    multi: true,\n};\nvar UiSwitchComponent = /*@__PURE__*/ (function () {\n    function UiSwitchComponent(cdr) {\n        this.cdr = cdr;\n        this.size = 'medium';\n        this.change = new EventEmitter();\n        this.color = 'rgb(100, 189, 99)';\n        this.switchOffColor = '';\n        this.switchColor = '#fff';\n        this.defaultBgColor = '#fff';\n        this.defaultBoColor = '#dfdfdf';\n        this.onTouchedCallback = function (v) { };\n        this.onChangeCallback = function (v) { };\n    }\n    Object.defineProperty(UiSwitchComponent.prototype, \"checked\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._checked;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */ function (v) {\n            this._checked = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UiSwitchComponent.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */ function (v) {\n            this._disabled = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UiSwitchComponent.prototype, \"reverse\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._reverse;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */ function (v) {\n            this._reverse = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} flag\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.getColor = /**\n     * @param {?=} flag\n     * @return {?}\n     */\n        function (flag) {\n            if (flag === void 0) {\n                flag = '';\n            }\n            if (flag === 'borderColor') {\n                return this.defaultBoColor;\n            }\n            if (flag === 'switchColor') {\n                if (this.reverse) {\n                    return !this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n                }\n                return this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n            }\n            if (this.reverse) {\n                return !this.checked ? this.color : this.defaultBgColor;\n            }\n            return this.checked ? this.color : this.defaultBgColor;\n        };\n    /**\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.onToggle = /**\n     * @return {?}\n     */\n        function () {\n            if (this.disabled) {\n                return;\n            }\n            this.checked = !this.checked;\n            this.change.emit(this.checked);\n            this.onChangeCallback(this.checked);\n            this.onTouchedCallback(this.checked);\n            this.cdr.markForCheck();\n        };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.writeValue = /**\n     * @param {?} obj\n     * @return {?}\n     */\n        function (obj) {\n            if (obj !== this.checked) {\n                this.checked = !!obj;\n            }\n            if (this.cdr) {\n                this.cdr.markForCheck();\n            }\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onChangeCallback = fn;\n        };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n        function (fn) {\n            this.onTouchedCallback = fn;\n        };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n        function (isDisabled) {\n            this.disabled = isDisabled;\n        };\n    return UiSwitchComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar UiSwitchModule = /*@__PURE__*/ (function () {\n    function UiSwitchModule() {\n    }\n    return UiSwitchModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { UiSwitchComponent, UiSwitchModule };\n//# sourceMappingURL=ui-switch.es5.js.map\n",null]}