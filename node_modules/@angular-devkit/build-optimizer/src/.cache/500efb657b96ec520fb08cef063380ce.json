{"remainingRequest":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ng2-img-cropper\\src\\model\\handle.js","dependencies":[{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\ng2-img-cropper\\src\\model\\handle.js","mtime":1498555521000},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540452592066},{"path":"C:\\smart\\lite_frontend_24_10_2018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Point } from './point';\r\nimport { CropperSettings } from '../cropperSettings';\r\nvar Handle = /*@__PURE__*/ (function () {\r\n    function Handle(x, y, radius, settings) {\r\n        this.cropperSettings = new CropperSettings();\r\n        this.over = false;\r\n        this.drag = false;\r\n        this._position = new Point(x, y);\r\n        this.offset = new Point(0, 0);\r\n        this.radius = radius;\r\n        this.cropperSettings = settings;\r\n    }\r\n    Handle.prototype.setDrag = function (value) {\r\n        this.drag = value;\r\n        this.setOver(value);\r\n    };\r\n    Handle.prototype.draw = function (ctx) {\r\n        // this should't be empty\r\n    };\r\n    Handle.prototype.setOver = function (over) {\r\n        this.over = over;\r\n    };\r\n    Handle.prototype.touchInBounds = function (x, y) {\r\n        return (x > this.position.x - this.radius + this.offset.x) &&\r\n            (x < this.position.x + this.radius + this.offset.x) &&\r\n            (y > this.position.y - this.radius + this.offset.y) &&\r\n            (y < this.position.y + this.radius + this.offset.y);\r\n    };\r\n    Object.defineProperty(Handle.prototype, \"position\", {\r\n        get: function () {\r\n            return this._position;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Handle.prototype.setPosition = function (x, y) {\r\n        this._position.x = x;\r\n        this._position.y = y;\r\n    };\r\n    return Handle;\r\n}());\r\nexport { Handle };\r\n//# sourceMappingURL=handle.js.map \r\n",null]}